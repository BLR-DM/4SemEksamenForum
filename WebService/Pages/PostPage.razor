@page "/forum/{ForumName}/post/{PostId:int}/comments"
@using WebService.Dtos.CommandDtos
@inject IPostService PostService
@inject IForumService ForumService
@inject NavigationManager Navigation

<h3>PostPage</h3>

<div class="content-wrapper">
    @if (Forum?.Posts is not null)
    {
        <ShortPostComponent Post="Post" ForumName="@Forum.ForumName" ForumId="@Forum.Id" />
    }
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-info">@ErrorMessage</div>
    }
    <div>
        <form @onsubmit="CreateComment">
            <div class="form-group">
                <label for="comment-content">Submit a comment</label>
                <textarea class="form-control" @bind="CreateCommentDto.Content" id="comment-content" rows="3"></textarea>
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </form>
    </div>
</div>
<div class="mt-3"></div>
<div class="content-wrapper">
    @if (Post is not null && Post.Comments.Count != 0)
    {
        foreach (var comment in Post.Comments)
        {
            <div class="comment-wrapper">
                <ShortCommentComponent Comment="comment" />
            </div>
        }
    }
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-info">@ErrorMessage</div>
    }
</div>

@code {
    [Parameter] public string ForumName { get; set; }
    [Parameter] public int PostId { get; set; }

    public ForumView? Forum { get; set; }

    public PostView? Post { get; set; }

    public string ErrorMessage { get; set; } = string.Empty;

    public CreateCommentDto CreateCommentDto { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        ErrorMessage = string.Empty;
        Forum = await PostService.GetForumWithSinglePost(ForumName, PostId);
        if (Forum == null)
        {
            ErrorMessage = "Forum not found";
        }
        else if (Forum.Posts == null || Forum.Posts.Count == 0)
        {
            ErrorMessage = "Forum doesn't have any posts";
        }
        else
        {
            Post = Forum.Posts.FirstOrDefault(p => p.Id == PostId);
        }
    }

    private async Task CreateComment()
    {
        try
        {
            await PostService.CreateComment(CreateCommentDto, Forum.Id, Post.Id);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            ErrorMessage = "Failed to create comment";
        }
    }
}