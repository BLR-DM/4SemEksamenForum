@page "/notifications"

@inject UserSessionService Session

<div class="mt-3"></div> @*Testing*@
@if (Session.Notifications is not null && Session.Notifications.Count > 0) 
{
    var testNotification = Session.Notifications.First();

    <div class="content-wrapper"> @*Testing*@
        <div class="notification-list">
            <div class="content-wrapper">
                <div>(For test display)</div>
                <div><strong>Id:</strong><span>@testNotification.Id</span></div>
                <div><strong>Message:</strong><span>@testNotification.Message</span></div>
                <div><strong>IsRead:</strong><span>@testNotification.IsRead</span></div>
                <div><strong>CreatedAt:</strong><span>@testNotification.CreatedAt</span></div>
            </div>
            <div class="mt-3"></div>

            <div>Notifications:</div>
            @foreach (var notification in Session.Notifications)
            {
                @* @if (notification.SourceType == "Forum")
                {
                    var forum = Session.Forums?.FirstOrDefault(f => f.Id == notification.SourceId);
                    <ShortNotificationComponent Notification="notification" Forum="forum"></ShortNotificationComponent>
                }
                else if (notification.SourceType == "Post")
                {
                    <ShortNotificationComponent Notification="notification"></ShortNotificationComponent>
                } *@
                <ShortNotificationComponent Notification="notification"></ShortNotificationComponent>
            }


            @*var test = Session.Notifications.First();
                <div>
                    <div><strong>@test.Id</strong></div>
                    <div><strong>@test.UserId</strong></div>
                    <div><strong>@test.Message</strong></div>
                    <div><strong>@test.IsRead</strong></div>
                    <div><strong>@test.CreatedAt</strong></div>
                </div>*@
        </div>
    </div>
}
else
{
    <div>No notifications</div>
}


@code {
    protected override async Task OnInitializedAsync()
    {
        if (!Session.IsInitialized)
        {
            await Session.InitializeAsync();
        }
    }
}
