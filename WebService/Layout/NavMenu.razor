@inject ISubscriptionService SubscriptionService
@inject AuthenticationStateProvider AuthStateProvider
@inject AuthenticationStateProvider AuthProvider

@inject UserSessionService Session


<MudNavMenu>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="/" Match="NavLinkMatch.Prefix">My Page</MudNavLink>
            @if (Session.HasRole("moderator"))
            {
                <MudNavLink Href="/admin" Match="NavLinkMatch.Prefix">Admin Page</MudNavLink>
            }
            <MudNavLink Href="/explore" Match="NavLinkMatch.Prefix">Explore forums</MudNavLink>
            <MudNavLink Href="/forum/create" Match="NavLinkMatch.Prefix">Create new forum</MudNavLink>
            <MudNavGroup Title="Subscribed Forums" Expanded="true">
                @if (SubscribedForums is not null && SubscribedForums.Count != 0)
                {
                    @foreach (var forum in SubscribedForums)
                    {
                        <MudNavLink Href=@($"/forum/{forum.ForumName}") Match="NavLinkMatch.Prefix">@forum.ForumName</MudNavLink>
                    }
                }
            </MudNavGroup>
        </Authorized>
        <NotAuthorized>

        </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    [Parameter] 
    public List<ForumView>? Forums { get; set; }

    public List<ForumView>? SubscribedForums { get; set; } = [];

    protected override void OnInitialized()
    {
        Session.OnSubscriptionsChanged += SetSubscribedForums;
    }

    protected override void OnParametersSet()
    {
        if (Forums is null || Forums.Count == 0)
        {
            SubscribedForums = new List<ForumView>();
            return;
        }

        if (Session.IsLoggedIn)
        {
            SetSubscribedForums();
        }

    }

    private void SetSubscribedForums()
    {
        SubscribedForums = Forums?
            .Where(f => Session.SubscribedForumIds.Contains(f.Id))
            .ToList();
    }

    public void Dispose()
    {
        Session.OnSubscriptionsChanged -= SetSubscribedForums;
    }

}