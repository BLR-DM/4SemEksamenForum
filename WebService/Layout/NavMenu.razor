@inject ISubscriptionService SubscriptionService
@inject AuthenticationStateProvider AuthStateProvider

<MudNavMenu>
    <MudNavLink Href="/servers" Match="NavLinkMatch.Prefix">Servers</MudNavLink>
        @if (SubscribedForums is not null && SubscribedForums.Count != 0)
        {
            <MudNavGroup Title="Forums" Expanded="true">
                @foreach (var forum in SubscribedForums)
                {
                    <MudNavLink Href=@($"/forum/{forum.ForumName}") Match="NavLinkMatch.Prefix">@forum.ForumName</MudNavLink>
                }
            </MudNavGroup>
        }
</MudNavMenu>

@code {
    [Parameter] 
    public List<ForumView>? Forums { get; set; }

    public List<ForumView>? SubscribedForums { get; set; } = [];

    protected override async Task OnParametersSetAsync()
    {
        if (Forums is null || Forums.Count == 0)
        {
            SubscribedForums = new List<ForumView>();
            return;
        }

        if (await UserSession.IsLoggedInAsync())
        {
            var subscribedForumIds = await SubscriptionService.GetSubscribedForumIds("1");
            SubscribedForums = Forums
                .Where(f => subscribedForumIds.Contains(Convert.ToInt32(f.Id)))
                .ToList();
        }
    }


}