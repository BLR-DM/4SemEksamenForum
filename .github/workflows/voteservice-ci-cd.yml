name: VoteService - Test & Deploy

on:
  workflow_dispatch: 
  
  pull_request:
    branches: [ master ]
    paths:
      - 'VoteService/**'

jobs:
  build-voteservice:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run build
      run: dotnet build VoteService/VoteService.Api

  test-voteservice:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run tests
      run: dotnet test VoteService/VoteService.Domain.Test --no-build

  deploy:
    needs: [build-voteservice, test-voteservice]
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Docker image (ARM64)
      run: |
        docker build -t bilalkinali/voteservice-api:latest \
          -f VoteService/VoteService.Api/Dockerfile \
          .
        docker push bilalkinali/voteservice-api:latest
    
    - name: Deploy to Server via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd Projects/4SemForumProjekt
          docker pull bilalkinali/voteservice-api:latest
          docker compose up -d --force-recreate voteservice-api voteservice-dapr
          docker image prune -f
